---
import LoaderIcon from "~/assets/loader.svg"
---

<form id="email-form" novalidate>
  <div class="flex flex-col sm:flex-row gap-4 justify-center">
    <input
      id="email"
      name="email"
      type="email"
      placeholder="Enter your email"
      class="w-full flex-1 px-4 py-3 rounded-lg border border-input bg-background/5 backdrop-blur-xl ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2"
    />

    <button
      type="submit"
      class="relative inline-flex items-center justify-center gap-2 px-8 py-3 font-medium -tracking-micro transition-all bg-foreground text-background rounded-lg ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 hover:shadow-md hover:shadow-foreground/20 hover:-translate-y-px disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:translate-y-0 disabled:hover:shadow-none"
    >
      <LoaderIcon class="hidden animate-spin size-5" />
      <span>Join the Waitlist</span>
    </button>
  </div>

  <p id="message" class="hidden mt-2 px-2 text-sm text-green-500 text-red-500">
  </p>
</form>

<script>
  import { actions, isInputError } from "astro:actions";

  type MessageType = "error" | "success";

  const form = document.getElementById("email-form") as HTMLFormElement;
  const submitButton = form.querySelector("button") as HTMLButtonElement;
  const spinner = submitButton.querySelector("svg") as SVGElement;
  const buttonText = submitButton.querySelector("span") as HTMLSpanElement;
  const messageEl = document.getElementById("message") as HTMLParagraphElement;

  const handleMessage = (message: string, type: MessageType) => {
    messageEl.className = `mt-2 px-2 text-sm ${type === "success" ? "text-green-500" : "text-red-500"}`;
    messageEl.innerText = message;
    messageEl.classList.remove("hidden");
  };

  const handleFormSubmit = async (e: Event) => {
    e.preventDefault();

    submitButton.disabled = true;
    spinner.classList.remove("hidden");
    buttonText.innerText = "Joining...";
    messageEl.classList.add("hidden");

    try {
      const { data, error } = await actions.subscribe(new FormData(form));

      if (error && isInputError(error)) {
        handleMessage(error.fields.email?.[0] ?? "Invalid email", "error");
        return;
      }

      (document.getElementById("email") as HTMLInputElement).value = "";
      handleMessage(data?.message ?? "Success!", "success");
    } finally {
      submitButton.disabled = false;
      spinner.classList.add("hidden");
      buttonText.innerText = "Join the Waitlist";
    }
  };

  form.addEventListener("submit", handleFormSubmit);
</script>
